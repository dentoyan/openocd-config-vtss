# VTSS MIPS 24Kc SoC.
# tested on Serval1 refererence board

source [find bitsbytes.tcl]
source [find vtss/chips/vcoreiii.tcl]
source [find vtss/chips/common.tcl]
source [find vtss/chips/servalt.tcl]
source [find memory.tcl]
source [find mem_helper.tcl]
source [find mmr_helpers.tcl]

#telnet_port 4444
#gdb_port 3333

if [catch {transport select}] {
 echo "Info : session transport was not selected, defaulting to JTAG"
 transport select jtag
}
#adapter_nsrst_delay 100
#jtag_ntrst_delay 100
reset_config trst_and_srst

# JTAG speed should be <= F_CPU/6.
adapter_khz 4500

set CHIPNAME serval1

jtag newtap $CHIPNAME cpu -irlen 5 -ircapture 0x1 -irmask 0x1f -expected-id 0x0b0040e9

set _TARGETNAME $CHIPNAME.cpu
target create $_TARGETNAME mips_m4k -endian little -chain-position $_TARGETNAME

# setup working area somewhere in RAM
$_TARGETNAME configure -work-area-phys 0xa0030000 -work-area-size 1024 -work-area-backup 0
$_TARGETNAME configure -event gdb-attach { reset halt; target_init }
$_TARGETNAME configure -event reset-init { target_init }

# Refboard settings!
set VTSS_MEMPARM_MEMCFG   0x00001fe9
set VTSS_MEMPARM_PERIOD   0x00080985
set VTSS_MEMPARM_TIMING0  0x634bd343
set VTSS_MEMPARM_TIMING1  0x100f434c
set VTSS_MEMPARM_TIMING2  0x4b510054
set VTSS_MEMPARM_TIMING3  0x00001138
set VTSS_MEMPARM_MR0      0x00000220
set VTSS_MEMPARM_MR1      0x00000040
set VTSS_MEMPARM_MR2      0x00000000
set VTSS_MEMPARM_MR3      0x00000000

proc show_ddr {} {
     show_MEMCTRL_CTRL
     show_MEMCTRL_CFG
     show_MEMCTRL_STAT
     show_MEMCTRL_REF_PERIOD
     show_MEMCTRL_MEMPHY_CFG
     show_MEMCTRL_MEMPHY_ZCAL
     show_MEMCTRL_TIMING0
     show_MEMCTRL_TIMING1
     show_MEMCTRL_TIMING2
     show_MEMCTRL_TIMING3
     show_MEMCTRL_MR0_VAL
     show_MEMCTRL_MR1_VAL
     show_MEMCTRL_MR2_VAL
     show_MEMCTRL_MR3_VAL
     show_MEMCTRL_TERMRES_CTRL
     show_MEMCTRL_DQS_DLY_0
     show_MEMCTRL_DQS_DLY_1     
}

proc show_intr {} {
    set irqlist {pcie inj1 inj0 xtr1 xtr0 integ ptps ptpr oam fdma miim1 miim0 gpio sgpio sw1 sw0 twi uart2 uart tmr2 tmr1 tmr0 ext1 ext0 dev}
    set irqno [llength $irqlist]
    foreach irq $irqlist {
        incr irqno -1
        lappend irqmask "$irq $irqno $irqno"
    }
    show_reg INTR_IDENT $irqmask
    show_reg INTR_ENA $irqmask
    show_reg INTR_RAW $irqmask
    show_reg INTR_STICKY $irqmask
}

proc target_init_ddr {} {
	mww $::CPU_SYSTEM_CTRL_RESET 0
	# Set reset briefly
	mww $::MEMCTRL_MEMPHY_CFG 1
	sleep 100
	mww $::MEMCTRL_MEMPHY_CFG 0x2
	mww $::MEMCTRL_MEMPHY_ZCAL 0xEF
	sleep 100
	# Drive CL, CK, ODT, enable SSTL
	mww $::MEMCTRL_MEMPHY_CFG 0x0000001E
	mww $::MEMCTRL_CFG $::VTSS_MEMPARM_MEMCFG
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_REF_PERIOD
	mww $::MEMCTRL_REF_PERIOD $::VTSS_MEMPARM_PERIOD
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_TIMING0
	mww $::MEMCTRL_TIMING0 $::VTSS_MEMPARM_TIMING0
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_TIMING1
	mww $::MEMCTRL_TIMING1 $::VTSS_MEMPARM_TIMING1
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_TIMING2
	mww $::MEMCTRL_TIMING2 $::VTSS_MEMPARM_TIMING2
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_TIMING3
	mww $::MEMCTRL_TIMING3 $::VTSS_MEMPARM_TIMING3
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_MR0_VAL - Assumes DDR2 operation
	mww $::MEMCTRL_MR0_VAL $::VTSS_MEMPARM_MR0
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_MR1_VAL -
	# DLL-on, Full-OD, AL=0, RTT=off, nDQS-on, RDQS-off, out-en
	mww $::MEMCTRL_MR1_VAL $::VTSS_MEMPARM_MR1
	# MR2+MR3
	mww $::MEMCTRL_MR2_VAL $::VTSS_MEMPARM_MR2
	mww $::MEMCTRL_MR3_VAL $::VTSS_MEMPARM_MR3
	# VTSS_ICPU_CFG_MEMEMCTRLTRL_MEMEMCTRLTRL_TERMRES_CTRL - Termination setup - ODT enable
	mww $::MEMCTRL_TERMRES_CTRL 0x0000000D
	# MEMCTRL_CTRL - Now, rip it!
	mww $::MEMCTRL_CTRL 1
	sleep 100
	mww $::MEMCTRL_DQS_DLY_0 0x368
	mww $::MEMCTRL_DQS_DLY_1 0x368
	echo "DDR Initialized"
	mmw $::CPU_SYSTEM_CTRL_GENERAL_CTRL 0 1
}

proc target_init { } {
      # Let target execute at normal reset vector to proper initialize
      resume 0xa0000000
      sleep  2000
      halt
      echo "Reset done"
}
